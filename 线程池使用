配置通用线程池使用

xml:
<!-- 通用线程池（发邮件、发短信等） -->
<bean id="threadPoolTaskExecutor"
      class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
      <property name="corePoolSize" value="10" />
      <property name="maxPoolSize" value="20" />
      <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE
          <property name="queueCapacity" value="1000" /> -->
      <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
      <property name="keepAliveSeconds" value="60" />
      <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
      <property name="rejectedExecutionHandler">
          <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
          <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
          <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
          <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
          <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
      </property>
</bean>

java:(spring boot)
1、注入
@Resource(name="threadPoolTaskExecutor")
private ThreadPoolTaskExecutor threadPoolTaskExecutor;

2、使用

threadPoolTaskExecutor.execute(new Runnable() {	
  @Override
  public void run() {
    log.info("执行逻辑即可");
  }
});
